server.port = 800
spring.application.name = DESCO
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
server.servlet.context-path=

#Test DB
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.defer-datasource-initialization=true
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:sqlserver://192.168.0.127\\SQLSERVER2016:1522;databaseName=WZPDCL
#spring.datasource.username=appusrwzpdcl
#spring.datasource.password=Nbl@321
#
#spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
#spring.jpa.hibernate.ddl-auto = update

# Hikari will use the above plus the following to setup connection pooling
# maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.connection-timeout = 20000
# minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.minimum-idle= 10
# maximum pool size
spring.datasource.hikari.maximum-pool-size= 10
# maximum idle time for connection
spring.datasource.hikari.idle-timeout=10000
# maximum lifetime in milliseconds of a connection in the pool after it is closed.
spring.datasource.hikari.max-lifetime= 1000
